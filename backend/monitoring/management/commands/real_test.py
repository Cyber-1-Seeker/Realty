from django.core.management.base import BaseCommand
from django.test import RequestFactory
from django.contrib.sessions.middleware import SessionMiddleware
from django.contrib.auth.middleware import AuthenticationMiddleware
from monitoring.middleware_v2 import SmartVisitMiddleware
from monitoring.models import DailyStats, DailyIPLog
from datetime import date
import time


class Command(BaseCommand):
    help = '–†–µ–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ middleware –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è'

    def add_arguments(self, parser):
        parser.add_argument(
            '--visits',
            type=int,
            default=3,
            help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–∏–∑–∏—Ç–æ–≤'
        )

    def handle(self, *args, **options):
        visits_count = options['visits']
        
        self.stdout.write(f"üß™ –†–µ–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ middleware –¥–ª—è {visits_count} –≤–∏–∑–∏—Ç–æ–≤...")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–±—Ä–∏–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤
        factory = RequestFactory()
        
        # –°–æ–∑–¥–∞–µ–º middleware —Å –∑–∞–≥–ª—É—à–∫–æ–π –¥–ª—è get_response
        def dummy_get_response(request):
            return None
        
        middleware = SmartVisitMiddleware(dummy_get_response)
        session_middleware = SessionMiddleware(dummy_get_response)
        auth_middleware = AuthenticationMiddleware(dummy_get_response)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        today = date.today()
        try:
            stat = DailyStats.objects.get(date=today)
            initial_visits = stat.visits
            self.stdout.write(f"üìä –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–æ–≤: {initial_visits}")
        except DailyStats.DoesNotExist:
            initial_visits = 0
            self.stdout.write(f"üìä –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–∑–∏—Ç–æ–≤: 0")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤–∏–∑–∏—Ç—ã
        for i in range(visits_count):
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
            test_request = factory.get('/test/')
            test_request.META['REMOTE_ADDR'] = f'127.0.0.{i+1}'
            test_request.META['HTTP_USER_AGENT'] = f'TestBrowser/{i+1}'
            
            # –î–æ–±–∞–≤–ª—è–µ–º middleware
            session_middleware.process_request(test_request)
            auth_middleware.process_request(test_request)
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –æ—Ç–≤–µ—Ç–∞
            from django.http import HttpResponse
            dummy_response = HttpResponse("Test")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –Ω–∞—à middleware
            middleware.process_response(test_request, dummy_response)
            
            self.stdout.write(f"  ‚úÖ –í–∏–∑–∏—Ç {i+1}: IP 127.0.0.{i+1}")
            
            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            time.sleep(0.5)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        try:
            stat = DailyStats.objects.get(date=today)
            final_visits = stat.visits
            visits_added = final_visits - initial_visits
            
            self.stdout.write(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
            self.stdout.write(f"   –ù–∞—á–∞–ª–æ: {initial_visits} –≤–∏–∑–∏—Ç–æ–≤")
            self.stdout.write(f"   –ö–æ–Ω–µ—Ü: {final_visits} –≤–∏–∑–∏—Ç–æ–≤")
            self.stdout.write(f"   –î–æ–±–∞–≤–ª–µ–Ω–æ: {visits_added} –≤–∏–∑–∏—Ç–æ–≤")
            
            if visits_added == visits_count:
                self.stdout.write(f"   üéâ Middleware —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
            else:
                self.stdout.write(f"   ‚ùå Middleware —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
                
        except DailyStats.DoesNotExist:
            self.stdout.write(f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ {today}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ IP –ª–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        ip_logs = DailyIPLog.objects.filter(date=today)
        if ip_logs.exists():
            self.stdout.write(f"\nüìù IP –ª–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:")
            for log in ip_logs:
                self.stdout.write(f"   {log.ip_address}")
        else:
            self.stdout.write(f"\nüìù IP –ª–æ–≥–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        
        self.stdout.write(f"\nüí° –¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
        self.stdout.write(f"   http://localhost:8000/api/monitoring/simple/")
        self.stdout.write(f"   –ò –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑!")
