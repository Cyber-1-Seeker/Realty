# Generated by Django 5.2 on 2025-08-23 11:46

import django.core.validators
from django.db import migrations, models


def migrate_data_forward(apps, schema_editor):
    """
    Переносим данные из старых полей в новые диапазонные поля
    """
    Apartment = apps.get_model('apartment', 'Apartment')
    
    for apartment in Apartment.objects.all():
        # Переносим общую площадь
        if hasattr(apartment, 'total_area') and apartment.total_area:
            apartment.total_area_from = apartment.total_area
            apartment.total_area_to = apartment.total_area
        
        # Переносим жилую площадь
        if hasattr(apartment, 'living_area') and apartment.living_area:
            apartment.living_area_from = apartment.living_area
            apartment.living_area_to = apartment.living_area
        
        # Переносим площадь кухни
        if hasattr(apartment, 'kitchen_area') and apartment.kitchen_area:
            apartment.kitchen_area_from = apartment.kitchen_area
            apartment.kitchen_area_to = apartment.kitchen_area
        
        # Переносим этаж
        if hasattr(apartment, 'floor') and apartment.floor:
            apartment.floor_from = apartment.floor
            apartment.floor_to = apartment.floor
        
        apartment.save()


def migrate_data_backward(apps, schema_editor):
    """
    Обратный перенос данных (для отката миграции)
    """
    Apartment = apps.get_model('apartment', 'Apartment')
    
    for apartment in Apartment.objects.all():
        # Восстанавливаем общую площадь (берем среднее значение)
        if apartment.total_area_from and apartment.total_area_to:
            if apartment.total_area_from == apartment.total_area_to:
                # Если значения одинаковые, используем одно
                apartment.total_area = apartment.total_area_from
            else:
                # Если разные, используем среднее
                apartment.total_area = (apartment.total_area_from + apartment.total_area_to) / 2
        
        # Восстанавливаем жилую площадь
        if apartment.living_area_from and apartment.living_area_to:
            if apartment.living_area_from == apartment.living_area_to:
                apartment.living_area = apartment.living_area_from
            else:
                apartment.living_area = (apartment.living_area_from + apartment.living_area_to) / 2
        
        # Восстанавливаем площадь кухни
        if apartment.kitchen_area_from and apartment.kitchen_area_to:
            if apartment.kitchen_area_from == apartment.kitchen_area_to:
                apartment.kitchen_area = apartment.kitchen_area_from
            else:
                apartment.kitchen_area = (apartment.kitchen_area_from + apartment.kitchen_area_to) / 2
        
        # Восстанавливаем этаж
        if apartment.floor_from and apartment.floor_to:
            if apartment.floor_from == apartment.floor_to:
                apartment.floor = apartment.floor_from
            else:
                apartment.floor = apartment.floor_from  # Берем минимальный
        
        apartment.save()


class Migration(migrations.Migration):

    dependencies = [
        ('apartment', '0003_revert_to_single_fields'),
    ]

    operations = [
        # Сначала добавляем новые поля
        migrations.AddField(
            model_name='apartment',
            name='floor_from',
            field=models.PositiveIntegerField(blank=True, help_text='Если вы не знаете точный этаж, укажите диапазон', null=True, verbose_name='Этаж квартиры от'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='floor_to',
            field=models.PositiveIntegerField(blank=True, help_text='Если вы не знаете точный этаж, укажите диапазон', null=True, verbose_name='Этаж квартиры до'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='kitchen_area_from',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Площадь кухни от (м²)'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='kitchen_area_to',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Площадь кухни до (м²)'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='living_area_from',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Жилая площадь от (м²)'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='living_area_to',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Жилая площадь до (м²)'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='total_area_from',
            field=models.DecimalField(decimal_places=2, default=0.01, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Общая площадь от (м²)'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='total_area_to',
            field=models.DecimalField(decimal_places=2, default=0.01, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Общая площадь до (м²)'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='total_floors_from',
            field=models.PositiveIntegerField(blank=True, help_text='Если вы не знаете точную этажность дома, укажите примерный диапазон', null=True, verbose_name='Этажность дома от'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='total_floors_to',
            field=models.PositiveIntegerField(blank=True, help_text='Если вы не знаете точную этажность дома, укажите примерный диапазон', null=True, verbose_name='Этажность дома до'),
        ),
        
        # Переносим данные
        migrations.RunPython(migrate_data_forward, migrate_data_backward),
        
        # Удаляем старые поля
        migrations.RemoveField(
            model_name='apartment',
            name='floor',
        ),
        migrations.RemoveField(
            model_name='apartment',
            name='kitchen_area',
        ),
        migrations.RemoveField(
            model_name='apartment',
            name='living_area',
        ),
        migrations.RemoveField(
            model_name='apartment',
            name='total_area',
        ),
    ]
