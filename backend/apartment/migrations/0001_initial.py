# Generated by Django 5.2 on 2025-06-06 10:46

import apartment.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'На рассмотрении'), ('rejected', 'Отклонено'), ('approved', 'Принято')], default='pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True, verbose_name='Причина отклонения')),
                ('property_type', models.CharField(choices=[('apartment', 'Квартира'), ('apartments', 'Апартаменты'), ('studio', 'Студия'), ('house', 'Дом'), ('townhouse', 'Таунхаус')], default='apartment', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок объявления')),
                ('total_area', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Общая площадь (м²)')),
                ('living_area', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Жилая площадь (м²)')),
                ('kitchen_area', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Площадь кухни (м²)')),
                ('floor', models.PositiveIntegerField(blank=True, help_text='Для домов можно оставить пустым', null=True, verbose_name='Этаж')),
                ('total_floors', models.PositiveIntegerField(blank=True, help_text='Для домов можно оставить пустым', null=True, verbose_name='Этажность дома')),
                ('rooms', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)], verbose_name='Количество комнат')),
                ('bathroom_type', models.CharField(choices=[('separate', 'Раздельный'), ('combined', 'Совмещенный'), ('multiple', 'Несколько санузлов')], default='combined', max_length=20, verbose_name='Санузел')),
                ('renovation', models.CharField(choices=[('rough', 'Черновая'), ('clean', 'Чистовая'), ('euro', 'Евроремонт'), ('design', 'Дизайнерский'), ('partial', 'Частичный ремонт')], default='clean', max_length=20, verbose_name='Ремонт')),
                ('balcony', models.PositiveIntegerField(default=0, verbose_name='Количество балконов/лоджий')),
                ('view', models.CharField(choices=[('yard', 'Двор'), ('street', 'Улица'), ('park', 'Парк'), ('river', 'Река'), ('city', 'Вид на город')], default='yard', max_length=20, verbose_name='Вид из окна')),
                ('construction_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2100)], verbose_name='Год постройки')),
                ('last_renovation_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2100)], verbose_name='Год ремонта')),
                ('price', models.DecimalField(decimal_places=2, max_digits=30, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Цена')),
                ('deal_type', models.CharField(choices=[('sale', 'Продажа'), ('rent', 'Аренда'), ('rent_daily', 'Посуточная аренда')], default='sale', max_length=20, verbose_name='Тип сделки')),
                ('deposit', models.DecimalField(blank=True, decimal_places=2, max_digits=30, null=True, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Залог (для аренды)')),
                ('utilities', models.CharField(blank=True, max_length=100, null=True, verbose_name='Коммунальные платежи')),
                ('bargain', models.BooleanField(default=False, verbose_name='Возможен торг')),
                ('description', models.TextField(help_text='Рекомендуемая длина до 500 символов', verbose_name='Описание')),
                ('features', models.TextField(blank=True, help_text='Ключевые особенности через запятую (до 500 символов)', null=True, verbose_name='Особенности')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apartments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Недвижимость',
                'verbose_name_plural': 'Объекты недвижимости',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApartmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=apartment.models.apartment_image_upload_path)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='apartment.apartment')),
            ],
        ),
    ]
